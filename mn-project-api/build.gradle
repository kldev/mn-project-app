plugins {
    id("com.github.johnrengelman.shadow") version "7.1.0"
    id("io.micronaut.application") version "3.0.0"
}

version = "0.1"
group = "mn.portal"

repositories {
    mavenCentral()
}

micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("mn.portal.*")
    }
}

configurations.all {
    resolutionStrategy.eachDependency { details ->
        if (details.requested.group == 'org.apache.logging.log4j') {
            details.useVersion '2.17.0'
            details.because 'zero-day-exploits suck'
        }
    }
}

dependencies {
    annotationProcessor("io.micronaut:micronaut-http-validation:3.2.2")
    annotationProcessor("io.micronaut.data:micronaut-data-processor:3.2.1")
    annotationProcessor("io.micronaut.security:micronaut-security-annotations:3.2.0")
    implementation("io.micronaut:micronaut-http-client:3.2.2")
    implementation("io.micronaut:micronaut-runtime:3.2.2")
    implementation("io.micronaut.data:micronaut-data-jdbc:3.2.1")
    implementation("io.micronaut.flyway:micronaut-flyway:5.0.1")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari:4.0.4")
    implementation("javax.annotation:javax.annotation-api:1.3.2")
    implementation("io.micronaut.security:micronaut-security-jwt:3.2.0")
    implementation "org.springframework.security:spring-security-crypto:5.5.1"
    implementation("io.micronaut.reactor:micronaut-reactor:2.1.1")
    implementation("commons-logging:commons-logging:1.2")

    runtimeOnly("ch.qos.logback:logback-classic:1.2.9")
    runtimeOnly("org.postgresql:postgresql:42.3.1")
    testImplementation("org.testcontainers:junit-jupiter:1.16.2")
    testImplementation("org.testcontainers:postgresql:1.16.2")
    testImplementation("org.testcontainers:testcontainers:1.16.2")
    implementation("io.micronaut:micronaut-validation:3.2.2")
}


application {
    mainClass.set("mn.portal.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("11")
    targetCompatibility = JavaVersion.toVersion("11")
}

dockerBuild {
    images = ["docker.hs.local/mn-api:${version}"]
}

dockerBuildNative {
    images = ["docker.hs.local/mn-api-native:${version}"]
}

